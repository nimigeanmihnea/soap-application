
package application.stub;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Admin", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Admin {


    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "add", targetNamespace = "http://service/", className = "application.stub.Add")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://service/", className = "application.stub.AddResponse")
    @Action(input = "http://service/Admin/addRequest", output = "http://service/Admin/addResponse")
    public void add(
        @WebParam(name = "arg0", targetNamespace = "")
        Package arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "remove", targetNamespace = "http://service/", className = "application.stub.Remove")
    @ResponseWrapper(localName = "removeResponse", targetNamespace = "http://service/", className = "application.stub.RemoveResponse")
    @Action(input = "http://service/Admin/removeRequest", output = "http://service/Admin/removeResponse")
    public void remove(
        @WebParam(name = "arg0", targetNamespace = "")
        Package arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "update", targetNamespace = "http://service/", className = "application.stub.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://service/", className = "application.stub.UpdateResponse")
    @Action(input = "http://service/Admin/updateRequest", output = "http://service/Admin/updateResponse")
    public void update(
        @WebParam(name = "arg0", targetNamespace = "")
        Package arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns application.stub.Package
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPackage", targetNamespace = "http://service/", className = "application.stub.GetPackage")
    @ResponseWrapper(localName = "getPackageResponse", targetNamespace = "http://service/", className = "application.stub.GetPackageResponse")
    @Action(input = "http://service/Admin/getPackageRequest", output = "http://service/Admin/getPackageResponse")
    public Package getPackage(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "status", targetNamespace = "http://service/", className = "application.stub.Status")
    @ResponseWrapper(localName = "statusResponse", targetNamespace = "http://service/", className = "application.stub.StatusResponse")
    @Action(input = "http://service/Admin/statusRequest", output = "http://service/Admin/statusResponse")
    public void status(
        @WebParam(name = "arg0", targetNamespace = "")
        Package arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        City arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns application.stub.City
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCityByName", targetNamespace = "http://service/", className = "application.stub.FindCityByName")
    @ResponseWrapper(localName = "findCityByNameResponse", targetNamespace = "http://service/", className = "application.stub.FindCityByNameResponse")
    @Action(input = "http://service/Admin/findCityByNameRequest", output = "http://service/Admin/findCityByNameResponse")
    public City findCityByName(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
